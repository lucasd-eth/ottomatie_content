import { REST, Routes } from "discord.js";
import dotenv from "dotenv";
import fs from "fs";
import path from "path";
import { fileURLToPath } from "url";

dotenv.config();

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const commandsPath = path.join(__dirname, '../commands');

const commands = [];

async function loadCommands() {
    const files = fs.readdirSync(commandsPath);
    for (const file of files) {
      if (file.endsWith(".js")) {
        try {
          const { default: command } = await import(`../commands/${file}`);
  
          // B·ªè qua n·∫øu kh√¥ng enabled ho·∫∑c thi·∫øu .data
          if (!command.enabled) {
            console.log(`‚è≠Ô∏è B·ªè qua (disabled): ${file}`);
            continue;
          }
  
          if (!command.data || typeof command.data.toJSON !== 'function') {
            console.warn(`‚ö†Ô∏è Thi·∫øu .data h·ª£p l·ªá trong: ${file}`);
            continue;
          }
  
          commands.push(command.data.toJSON());
          console.log(`‚úÖ Loaded: ${command.data.name}`);
        } catch (err) {
          console.error(`‚ùå L·ªói khi load file ${file}: ${err.message}`);
        }
      }
    }
  }  


async function deploy() {
  const rest = new REST({ version: "10" }).setToken(process.env.DISCORD_TOKEN);

  try {
    console.log("üóëÔ∏è X√≥a t·∫•t c·∫£ l·ªánh c≈©...");
    await rest.put(Routes.applicationGuildCommands(process.env.CLIENT_ID, process.env.GUILD_ID), { body: [] });
    await rest.put(Routes.applicationCommands(process.env.CLIENT_ID), { body: [] });

    await loadCommands();

    console.log("üîÑ ƒêang c·∫≠p nh·∫≠t l·ªánh m·ªõi...");
    await rest.put(Routes.applicationGuildCommands(process.env.CLIENT_ID, process.env.GUILD_ID), { body: commands });

    console.log("‚úÖ ƒê√£ c·∫≠p nh·∫≠t l·ªánh th√†nh c√¥ng!");
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t l·ªánh:", error);
  }
}

deploy();
